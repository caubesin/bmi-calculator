{"version":3,"sources":["const/index.js","component/input-value.js","action/index.js","component/notice.js","component/chart.js","App.js","reportWebVitals.js","action/localStorage.js","reducers/calculate_BMI.js","reducers/index.js","index.js"],"names":["CALCULATE_BMI","REMOVE_DATA","UNDO_DATA","connect","dispatch","calculate_BMI","weight","height","type","actCALCULATE_BMI","props","inputW","useRef","inputH","useState","setWeight","setHeight","className","ref","id","placeholder","onChange","e","target","value","disabled","onClick","current","state","ownProps","remove_DATA","actREMOVE_DATA","undo_DATA","data","arrayBMI","handleData","length","style","width","fontSize","textAlign","map","key","results","date","isRemove","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","label","backgroundColor","borderBackground","borderColor","pointRadius","pointHoverRadius","pointHoverBorderColor","pointHoverBorderWidth","pointBorderColor","pointBorderWidth","options","responsive","scales","xAxes","scaleLabel","display","labelString","fontColor","gridLines","color","ticks","yAxes","beginAtZero","tooltips","titleFontSize","bodyFontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","storeData","localStorage","setItem","JSON","stringify","console","err","initialState","getItem","parse","error","getData","backupArrayBMI","action","Math","round","pow","shift","push","moment","format","sort","a","b","filter","combineReducers","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8464bc7f.chunk.js","sourcesContent":["export const CALCULATE_BMI = 'CALCULATE_BMI';\r\nexport const REMOVE_DATA = 'REMOVE_DATA';\r\nexport const UNDO_DATA = 'UNDO_DATA';","import React, {useState, useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './input-value.css';\r\nimport {actCALCULATE_BMI} from '../action/index'\r\n\r\n function Input(props) {\r\n    const inputW = useRef(null);\r\n    const inputH = useRef(null);\r\n    const [weight, setWeight] = useState(0);\r\n    const [height, setHeight] = useState(0);\r\n    const handleSubmit = () => {\r\n        inputW.current.value = '';\r\n        inputH.current.value = '';\r\n        setWeight(0);\r\n        setHeight(0);\r\n        props.calculate_BMI(weight, height);\r\n    }\r\n    return(\r\n        <div className = \"input-data\">\r\n            <div className = \"input-data-col\">\r\n                <label>Weight (in kg)</label><input type = 'number' ref={inputW} id = 'weight' placeholder ='50' onChange = {(e) => {e.target.value === '' ? setWeight(0) : setWeight(e.target.value)}}/>\r\n            </div>\r\n            <div className = \"input-data-col\">\r\n                <label>Height (in cm)</label><input type = 'number' ref={inputH} id = 'height' placeholder ='170' onChange = {(e) => {e.target.value === '' ? setHeight(0) : setHeight(e.target.value)}}/>\r\n            </div>\r\n            <button disabled = {(weight === 0 || height === 0) ? true : false}type = 'button' onClick ={() => {handleSubmit()}}>Calculate BMI</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        calculate_BMI: (weight, height) => {\r\n            dispatch(actCALCULATE_BMI(weight, height))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Input);","import {CALCULATE_BMI, REMOVE_DATA, UNDO_DATA} from '../const/index';\r\n\r\nexport const actCALCULATE_BMI = (weight, height) => {\r\n    return {\r\n        type : CALCULATE_BMI,\r\n        weight,\r\n        height\r\n    }\r\n}\r\n\r\nexport const actREMOVE_DATA = (id) => {\r\n    return {\r\n        type : REMOVE_DATA,\r\n        id\r\n    }\r\n}\r\n\r\nexport const actUNDO_DATA = () => {\r\n    return {\r\n        type : UNDO_DATA\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './notice.css';\r\nimport {actREMOVE_DATA, actUNDO_DATA} from '../action/index';\r\n\r\n\r\nfunction Notice(props) {\r\n    let data = props.calculate_BMI.arrayBMI;\r\n    const handleData = (data) => {\r\n        if(data < 18.5) {\r\n            return <p>Bạn đang gầy đấy cố ăn nhiều vô nhe !</p>\r\n        }\r\n        else if(data >= 18.5 && data < 24.9) {\r\n            return <p>Cơ thể bạn cân đối đấy !</p>\r\n        }\r\n        else if(data >= 25 && data < 29.9) {\r\n            return <p>Bạn hơi thừa cân tí thôi !</p>\r\n        }\r\n        else if(data >= 30 && data < 34.9) {\r\n            return <p>Bạn bị béo phì cấp độ I rồi nhe !</p>\r\n        }\r\n        else if(data >= 35 && data < 39.9) {\r\n            return <p>Bạn bị béo phì cấp độ II rồi nên giảm cân đi !\"</p>\r\n        }\r\n        else {\r\n            return <p>Bạn bị béo phì cấp độ III rồi nên giảm cân gấp !</p>\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"notice\">\r\n            <h2>7 Day Data</h2>\r\n            <div className=\"notice-container\">\r\n                {data.length === 0 ? <p style={{width: \"100%\", fontSize: \"calc(10px + 1vmin)\",textAlign: 'center'}}>No logs found</p> : data.map((value, key) => {\r\n                    return(\r\n                        <div key={key} className = \"notice-message\">\r\n                            <h3>BMI : {value.results}</h3>\r\n                            {handleData(value.results)}\r\n                            <h4><span>Weight : {value.weight} kg</span><span>Height : {value.height} cm</span><span>Date : {value.date}</span></h4>\r\n                            <button onClick={()=>{props.remove_DATA(value.id)}}>x</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            {props.calculate_BMI.isRemove ? <button className=\"btn-undo\" onClick={() => props.undo_DATA()}>Undo</button> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return({\r\n        calculate_BMI: state.calculate_BMI\r\n    })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        remove_DATA: (id) => {\r\n            dispatch(actREMOVE_DATA(id))\r\n        },\r\n        undo_DATA: () => {\r\n            dispatch(actUNDO_DATA());\r\n        }\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notice);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nfunction Chart(props) {\r\n    const data = canvas => {\r\n        const ctx = canvas.getContext(\"2d\")\r\n        const gradient = ctx.createLinearGradient(63, 81, 181, 700);\r\n        gradient.addColorStop(0, '#929dd9');\r\n        gradient.addColorStop(1, '#172b4d');\r\n        return {\r\n            labels: props.calculate_BMI.arrayBMI.length === 0 ? [] : props.calculate_BMI.arrayBMI.map((data) => {\r\n                return data.date;\r\n            }),\r\n            datasets : [{\r\n                data : props.calculate_BMI.arrayBMI.length === 0 ? [] : props.calculate_BMI.arrayBMI.map((data) => {\r\n                    return data.results;\r\n                }),\r\n                label : \"BMI\",\r\n                backgroundColor: gradient,\r\n                borderBackground: gradient,\r\n                borderColor : \"#3F51B5\",\r\n                pointRadius: 7,\r\n                pointHoverRadius: 8,\r\n                pointHoverBorderColor: 'white',\r\n                pointHoverBorderWidth: 2,\r\n                pointBorderColor: '#E00000',\r\n                pointBorderWidth: 2\r\n            }]\r\n        };\r\n    }\r\n    const options = {\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [\r\n                    {\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Date',\r\n                        fontSize: 13,\r\n                        fontColor: 'white'\r\n                    },\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: 'white'\r\n                    },\r\n                    ticks: {\r\n                        fontColor: 'white',\r\n                        fontSize: 16\r\n                    }\r\n                    }\r\n                ],\r\n                yAxes: [\r\n                    {\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'BMI',\r\n                        fontSize: 13,\r\n                        fontColor: 'white'\r\n                    },\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: 'white'\r\n                    },\r\n                    ticks: {\r\n                        fontColor: 'white',\r\n                        fontSize: 16,\r\n                        beginAtZero: true\r\n                    }\r\n                    }\r\n                ]\r\n                },\r\n            tooltips: {\r\n                titleFontSize: 13,\r\n                bodyFontSize: 13\r\n            }\r\n    };\r\n    \r\n    return(\r\n        <div style = {{width : \"70%\"}}>\r\n            <Line data={data} options ={options}></Line>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        calculate_BMI: state.calculate_BMI\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Chart);","import './App.css';\nimport Input from './component/input-value';\nimport Notice from './component/notice';\nimport Chart from './component/chart';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>BMI Tracker</h2>\n      </header>\n      <div className=\"container\">\n        <Input></Input>\n        <Chart></Chart>\n        <Notice></Notice>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const getData = (key) => {\r\n    if(!localStorage) return;\r\n    try {\r\n        if(localStorage.getItem(key) === null) return [];\r\n        return JSON.parse(localStorage.getItem(key));\r\n    }\r\n    catch(e) {\r\n        console.error(`Error getting item ${key} from localStorage`, e)\r\n    }\r\n}\r\n\r\nexport const storeData = (key, data) => {\r\n    if(!localStorage) return;\r\n    try {\r\n        return localStorage.setItem(key,JSON.stringify(data));\r\n    }\r\n    catch(e) {\r\n        console.err(`Error storing item ${key} to localStorage`, e);\r\n    }\r\n}","import {CALCULATE_BMI, REMOVE_DATA, UNDO_DATA} from '../const/index';\r\nimport moment from 'moment';\r\nimport {storeData, getData} from '../action/localStorage';\r\nconst initialState = {\r\n    results : 0,\r\n    arrayBMI : getData('data'),\r\n    isRemove : false\r\n}\r\nvar backupArrayBMI = [];\r\n\r\nconst calculate_BMI = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CALCULATE_BMI:\r\n            state.results = Math.round(action.weight / Math.pow(action.height/100,2) * 10) / 10;\r\n            //------Save results to array-------//\r\n            if(state.arrayBMI.length >= 7) {\r\n                state.arrayBMI.shift();\r\n            }\r\n            state.arrayBMI.push({\r\n                id : state.arrayBMI.length,\r\n                date : moment().format(\"DD-MM-YYYY\"),\r\n                weight : action.weight,\r\n                height : action.height,\r\n                results : state.results\r\n            })\r\n            //------Add localStore-------//\r\n            storeData('data',state.arrayBMI.sort((a,b) => a.id - b.id));\r\n            return state = {\r\n                ...state\r\n            }\r\n        case REMOVE_DATA:\r\n            backupArrayBMI = state.arrayBMI.filter((arrayBMI) => arrayBMI.id === action.id);\r\n            state.arrayBMI = state.arrayBMI.filter((arrayBMI) => arrayBMI.id !== action.id);\r\n            storeData('data', state.arrayBMI.sort((a,b) => a.id - b.id));\r\n            return state = {\r\n                ...state,\r\n                isRemove : true\r\n            }\r\n        case UNDO_DATA:\r\n            if(state.isRemove === true) {\r\n                state.arrayBMI.push(backupArrayBMI[0])\r\n                storeData('data', state.arrayBMI.sort((a,b) => a.id - b.id));\r\n                return state = {\r\n                    ...state,\r\n                    isRemove : false\r\n                }\r\n            }\r\n            return state = {\r\n                ...state\r\n            }\r\n        default:\r\n            return state = {\r\n                ...state\r\n            };\r\n    }\r\n}\r\n\r\nexport default calculate_BMI;","import {combineReducers} from 'redux';\r\nimport calculate_BMI from './calculate_BMI';\r\n\r\nexport default combineReducers({\r\n    calculate_BMI : calculate_BMI\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport reducers from './reducers/index';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\nconst store = createStore(reducers);\n \nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}